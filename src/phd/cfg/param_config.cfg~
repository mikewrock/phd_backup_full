#!/usr/bin/env python
PACKAGE = "phd"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("cloud_name",    str_t,    0, "Cloud Save Filename", "cloud")
gen.add("cloud_number",    int_t,    0, "Cloud Alignment Number", 1, 0, 10)

gen.add("intensity_min",    int_t,    0, "Marker Intensiy Cutoff", 900, 0, 3000)
gen.add("intensity_max",    int_t,    0, "Marker Intensiy Cutoff", 1200, 0, 3000)


gen.add("auto_crop_max_x",    double_t,    0, "Max X value when auto-cropping for trajectory generation", 5, 0, 10)
gen.add("auto_crop_min_x",    double_t,    0, "Min X value when auto-cropping for trajectory generation", -5, -10, 0)
gen.add("auto_crop_max_y",    double_t,    0, "Max Y value when auto-cropping for trajectory generation", .5, 0, 10)
gen.add("auto_crop_min_y",    double_t,    0, "Min Y value when auto-cropping for trajectory generation", -.5, -10, 0)
gen.add("auto_crop_max_z",    double_t,    0, "Max Z value when auto-cropping for trajectory generation", 1.5, 0, 10)
gen.add("auto_crop_min_z",    double_t,    0, "Min Z value when auto-cropping for trajectory generation", 0, -10, 0)

group1 = gen.add_group("Group One",type="collapse",  state = True)
group1.add("group1_int", int_t, 1, "A second level group parameter", 2)
group2 = group1.add_group("GROUP2", state=True)
group2.add("group2_double", double_t, 0, "A third level group parameter", 3.333)

exit(gen.generate(PACKAGE, "control_panel", "Param"))



