#LyX file created by tex2lyx 2.0.8.1
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options false
\language english
\language_package none
\inputencoding auto
\fontencoding default
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\paperfontsize default
\spacing single
\use_hyperref 0
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 0
\use_mathdots 0
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
chapter{Trajectory Generation}
\end_layout

\end_inset

 
\begin_inset CommandInset label
LatexCommand label
name "chap:traj"

\end_inset

 
\end_layout

\begin_layout Section

Chapter Overview
\end_layout

\begin_layout Standard

This chapter discusses the method in which the MASSS generates a trajectory for its manipulator to follow when performing scanning or shotcreting tasks. The main requirement for both scanning and shotcreting is to orient the end-effector perpendicular to the the mine surface. As well, the manipulator trajectory must maintain optimal distance from the mine surface and not miss any portion of the selected area. A LIDAR scanner on a nodding head produces pointclouds that are used as the input for the trajectory generation algorithm. The algorithm then generates a set of position and orientation via points that the manipulator must follow in order to perform the scanning or shotcreting task.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Section

Requirements of the Trajectory
\end_layout

\begin_layout Standard

Trajectory generation is used for two tasks that have very different applications but very similar execution. The purpose of the scanning task is to position the shielded radiation detector along the surface of the mine to determine ore concentration, while the shotcreting task is to apply shotcrete to the mine surface. Though the tasks and their purpose differ, their needs are the same. Both tasks require the manipulator to position itself orthogonal to mine surface, execute a motion that maintains a certain distance from the mine, and cover a specified region. Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:idealspray"

\end_inset

 shows the trajectory that would be required to scan or shotcrete a flat square.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard


\begin_inset Float figure
placement h
wide false
sideways false
status open


\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename Pics/optimal.png
	width 100text%

\end_inset

 
\begin_inset Caption

\begin_layout Standard

Trajectory Generation Template
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "fig:idealspray"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

To be functional as a trajectory generation algorithm for both scanning and shotcreting, some parameters of the generated trajectory must be easily changed. This is accomplished through the use of configuration files and the 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
node
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset

rqt_reconfigure
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 node. The configuration files contain the specifications that are used each time a trajectory is generated. They can be edited by the user, and shared among multiple systems. If they need to be changed during runtime or modified for a single use, the GUI provided by the 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
node
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset

rqt_reconfigure
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 node (shown in Fig. 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:dyngui"

\end_inset

) allows the user to quickly and easily modify the parameters. Two of the main parameters can be seen in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:idealspray"

\end_inset

, the step height and via distance. As well a third main parameter is the offset from the surface. Finally, the selection width and height can be specified by the user or left for the system to determine automatically. If no area is selected for scanning or shotcreting, a region next to the robot is selected with a size that is optimal for the manipulator's workspace. The control system uses the location of the default scan and shotcrete region when autonomously positioning itself to scan or shotcrete the next section of the mine such that it will not miss any sections.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard


\begin_inset Float figure
placement h
wide false
sideways false
status open


\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename Pics/dyngui.png
	width 80text%

\end_inset

 
\begin_inset Caption

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
node
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset

rqt_reconfigure
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 GUI
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "fig:dyngui"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

Specifically for shotcrete, the sprayer distance from the surface and angle relative to it are of the highest importance. Optimal distance maximizes the amount of adhesion and minimizes rebound. When the sprayer is too far away from the surface not enough shotcrete sticks to the surface, and when the sprayer is too close shotcrete will bounce off the surface. In both cases either shotcrete is wasted or the applied layer is of insufficient thickness. The former is uneconomical, and the latter is unsafe. Similarly, the amount of rebound is related to the amount the sprayer is off from the ideal 90
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
degree
\end_layout

\end_inset


\begin_inset space \hspace{}
\length 0pt
\end_inset

 angle to the surface. The height step is determined by the desired offset and the amount of spread from the shotcrete sprayer. This will likely be determined experimentally, but a fairly accurate estimate can be made if sufficient data is available for the sprayer attachment to the end-effector. Things like nozzle shape, shotcrete composition, pressure, and flowrate all affect the spread of the shotcrete spray.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard

The scanning configuration is dependant on the shielding used on the radiation sensor. In an effort to improve current techniques, shielded detectors will be used so they will only measure a precise region and not detect energy from the surrounding ore. The sensor will detect a conical area in the direction it is facing. The shape of the cone is dependant on the sensor and shielding used. The surface offset for radiation scanning is determined by how detailed of a scan the operator wants from the mine surface. Offset can be increased to scan a larger region or complete the area scan faster, or decreased to measure smaller regions at a time. Step height can be minimized to ensure full coverage with no overlap, or can be increased to reduce scanning time by not scanning the entirety of the selected area.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard

The via points and via distance allow the robot to follow the uneven surface of the mine. In the example shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:idealspray"

\end_inset

 there is no need for via points at locations along the straight lines, but when the image is overlaid as shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:unidealspray"

\end_inset

 the need for via points becomes apparent. The red circles highlight areas where additional via points are required. The blue circles show the via points that are necessary to maintain optimal distance, and the green circles show the via points necessary to maintain optimal angle. The via distance is the amount of space between via points, and is set by the user. Determining the via distance requires knowledge of how rough the surface is likely to be. In extreme cases via points can be calculated at every data point measured by the scanner. However, such high via point density leads to longer computation time and can become detrimental to the accuracy of the shotcrete application. Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:viapts"

\end_inset

 shows how choosing too high a via point density leads to a convoluted spray path that may be less effective than a lower via point density. In the diagram it would have been sufficient to use the wider via point spacing, when the finer spacing was used the additional via points caused the sprayer to move along a trajectory that is unnecessarily complex. In practice, small obtrusions on the mine surface are better ignored than attempting to orient the sprayer orthogonally to the surface at every point.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard


\begin_inset Float figure
placement h
wide false
sideways false
status open


\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename Pics/nonopt.png
	width 80text%

\end_inset

 
\begin_inset Caption

\begin_layout Standard

Trajectory Overlaid on Mine Surface. Via Points for Angle Shown in Green, Distance in Blue, and Missing Points in Red
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "fig:unidealspray"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset Float figure
placement h
wide false
sideways false
status open


\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename Pics/viapts.png
	width 80text%

\end_inset

 
\begin_inset Caption

\begin_layout Standard

Effect of Via Point Spacing
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "fig:viapts"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Section

Techniques for Generating Trajectories
\end_layout

\begin_layout Standard

Though it is a simple pattern, generating the template trajectory shown in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:idealspray"

\end_inset

 on an uneven surface is not a simple task. In reality, the pattern is to be generated on a surface that may contain sections in front, above, beside, or angled relative to the robot. Any scaling of the template trajectory will cause missed areas or overlap. Multiple approaches were tested to evaluate the effectiveness of each technique.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Subsection

Flattening
\end_layout

\begin_layout Subsection

Microscopic Approach
\end_layout

\begin_layout Standard

An ant crawling along the mine surface can treat it like a 2D plane. Though the can is moving in three dimensions, it is stuck on a two dimensional surface. When trajectory generation is reduced to microscopic sizing, the problem becomes one of path planning. To generate a trajectory like that in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:idealspray"

\end_inset

 the ant simply needs to walk 
\begin_inset Quotes eld
\end_inset

selection width
\begin_inset Quotes erd
\end_inset

, make a 90
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
degree
\end_layout

\end_inset


\begin_inset space \hspace{}
\length 0pt
\end_inset

 turn, walk 
\begin_inset Quotes eld
\end_inset

step height
\begin_inset Quotes erd
\end_inset

, make a 90
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
degree
\end_layout

\end_inset


\begin_inset space \hspace{}
\length 0pt
\end_inset

 turn in the other direction, and repeat until it has covered the entire selection area. The two challenges with this approach is travelling in a straight line, and turning 90
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
degree
\end_layout

\end_inset


\begin_inset space \hspace{}
\length 0pt
\end_inset

.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard

To measure a straight line across the surface, a single assumption is made. The algorithm assumes the selection area begins on a vertical section. While this is a reasonable assumption to make, had this technique been chosen for use in trajectory generation the surface normal at the start of the selection area would be used to determine an appropriate direction for the trajectory to begin with. With the vertical wall assumption, the second via point is simply constrained to be within the same vertical height as the first via point and 
\begin_inset Quotes eld
\end_inset

via distance
\begin_inset Quotes erd
\end_inset

 away within the selected area. The third and all subsequent via points are calculated by moving 
\begin_inset Quotes eld
\end_inset

via distance
\begin_inset Quotes erd
\end_inset

 along the vector created by the previous two via points. The actual via point is found using PCL's 
\begin_inset Quotes eld
\end_inset

nearest neighbour
\begin_inset Quotes erd
\end_inset

 search in the area of the expected via point. At the edge of the selection area the 90
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
degree
\end_layout

\end_inset


\begin_inset space \hspace{}
\length 0pt
\end_inset

 turn must be made. The direction vector to the expected point is calculated using the cross product of the vector from the previous point with the vector of the surface normal at the current point. The next expected via point location is then determined using the direction vector and the step height. The same steps are done for the next 90
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
degree
\end_layout

\end_inset


\begin_inset space \hspace{}
\length 0pt
\end_inset

 turn, then the path continues horizontally until reaching the starting edge of the selection area. A diagram illustrating this method is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:ant"

\end_inset

.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard


\begin_inset Float figure
placement h
wide false
sideways false
status open


\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename Pics/ant.jpg
	width 80text%

\end_inset

 
\begin_inset Caption

\begin_layout Standard

Determining Via Points Using Microscopic Path Planning
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "fig:ant"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

Since the robot is able to detect areas of insufficient shotcrete thickness, this method could be used but it does not yield a satisfactory trajectory. An example trajectory using this method is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:anttraj"

\end_inset

. Though the path does not fail entirely, the problems become evident: via points are not sufficiently constrained to vertical and horizontal paths. The direction vectors shown in red, surface normals in blue, and end-effector path in green show how the 
\begin_inset Quotes eld
\end_inset

nearest neighbour
\begin_inset Quotes erd
\end_inset

 search and expected via points using direction vectors approach causes the spray trajectory to become uneven.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard


\begin_inset Float figure
placement h
wide false
sideways false
status open


\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename Pics/anttraj.png
	width 80text%

\end_inset

 
\begin_inset Caption

\begin_layout Standard

Trajectory Generated Using Microscopic Path Planning
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "fig:anttraj"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

Plane Intersections
\end_layout

\begin_layout Standard

One simple technique to generate a shotcrete trajectory is to calculate the intersection between a horizontal plane and the surface. Though the robot may not be on a level surface, it can use its built in IMU to determine its orientation with respect to gravity and generate a level plane. By using the 
\begin_inset Quotes eld
\end_inset

crop box
\begin_inset Quotes erd
\end_inset

 function of the PCL library the software can inflate the plane to a rectangular prism of a desired thickness and crop all surface data points that do not lie within the box. Raising the box by the user specified step height allows the algorithm to generate a series of lines across the detected surface. These lines can then be sorted and downsampled to produce the via points necessary for a trajectory. If the surfaces to be scanned or sprayed were all vertical this technique would be simple and effective, however when applying it to angled or horizontal section the algorithm may fail. Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:hplanes"

\end_inset

 shows how using horizontal planes fails when applied to horizontal surfaces. As well, the step height measured along the surface will not be correct, since the step height was measured along the vertical axis of the robot.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard


\begin_inset Float figure
placement h
wide false
sideways false
status open


\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename Pics/hplanes.png
	width 100text%

\end_inset

 
\begin_inset Caption

\begin_layout Standard

Horizontal Plane Intersections
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "fig:hplanes"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

The next technique investigated was keeping the plane centred on the robot and rotating around the robots axes as shown in Figures 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:pitchroll"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:yawplane"

\end_inset

. Once again, using a fixed step angle will not yield a consistent step height. Moreover, the lines will converge at a point on a non-orthogonal wall. Consistent step height can be achieved by sorting the points on a line, then calculating the angle from the robot centre to the point at the appropriate step height measured along the wall. Using that angle the plane can be rotated by the appropriate amount to yield consistent and accurate step heights, but the converging patterns can not be avoided. If the plane is centred on the surface point of the sorted line and rotated to an angle normal to the surface, some converging lines disappear but the overall trajectory is still insufficient as shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:nplanes"

\end_inset

.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard


\begin_inset Float figure
placement H
wide false
sideways false
status open


\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename Pics/pitchroll.png
	width 100text%

\end_inset

 
\begin_inset Caption

\begin_layout Standard

Pitch and Roll Plane Intersections
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "fig:pitchroll"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset Float figure
placement H
wide false
sideways false
status open


\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename Pics/yawlines.png
	width 100text%

\end_inset

 
\begin_inset Caption

\begin_layout Standard

Yaw Plane Intersections
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "fig:yawplane"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset Float figure
placement H
wide false
sideways false
status open


\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename Pics/nlines.png
	width 100text%

\end_inset

 
\begin_inset Caption

\begin_layout Standard

Normal-to-Surface Plane Intersections
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "fig:nplanes"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection

Measuring Distance Along the Surface
\end_layout

\begin_layout Standard


\begin_inset Float figure
placement H
wide false
sideways false
status open


\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename Pics/vline.png
	width 100text%

\end_inset

 
\begin_inset Caption

\begin_layout Standard

Vertical Line from Plane Intersection
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "fig:vline"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

To produce a sorted line such as the one used in the normal-to-surface technique, first a line is extracted using plane intersection as shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:vline"

\end_inset

. The end of the line is determined by finding the point with the lowest the Z-height. The nearest neighbour search is used to find the next closest point, and the distance between the two points is calculated. Each successive point's distance is added to the cumulative point-to-point distance so that each point contains the distance from that point to the first point, travelling through each point along the way. Choosing the plane on which to extract points can be arbitrary, but if it is not vertical the end points of the line must be determined by finding the two furthest points along the line. Ideally the vertical line would be one dimensional, but since the crop box technique was used the line can have a thickness of a few data points. One of the problems with sorting the vertical line using nearest neighbours is that some points may be missed entirely. The missed points are then added once the line is complete, forming a sorted line similar to the one shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:sline"

\end_inset

. In the figure, the point distance is represented by colour, red being the smallest, then yellow, green, blue, purple and pink. The points ranging from blue through pink are all extra points that should have been ignored. As well, when multiple points are used the cumulative distance is longer than the true surface distance. Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:inset"

\end_inset

 highlights a small portion of a larger section of a sorted line. Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:meandering"

\end_inset

 shows how using the nearest neighbour approach can miss points and how it takes a much longer path than necessary. Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:downsampledpath"

\end_inset

 shows how downsampling the data allows the surface distance to approach a value much closer to the truth by ignoring all points within a certain radius of the accepted points. Another error check performed when sorting a line is to ensure the distance between two points its not too far apart. Since figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:inset"

\end_inset

 is only a section of a larger portion of a sorted line, the majority of the points are orange, indicating they were all sorted together. The purple points are the points that weren't sorted when the algorithm initially passed through, but since the algorithm will continue until all the point have been sorted it will eventually return to them (though the distance will be significantly larger due to each point storing the cumulative distance travelled). To avoid this case, a maximum distance between sorted points is set such that when the sorting algorithm reaches the end of the line it will not jump backwards to sort the remaining points it missed.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard


\begin_inset Float figure
placement H
wide false
sideways false
status open


\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename Pics/sortedline.png
	width 40text%

\end_inset

 
\begin_inset Caption

\begin_layout Standard

Sorted Vertical Line Failure
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "fig:sline"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset Float figure
placement H
wide false
sideways false
status open


\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename Pics/inset.png
	width 100text%

\end_inset

 
\begin_inset Caption

\begin_layout Standard

Large Portion of a Sorted Line
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "fig:inset"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset Float figure
placement H
wide false
sideways false
status open


\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename Pics/sorting.png
	width 80text%

\end_inset

 
\begin_inset Caption

\begin_layout Standard

Long Path Produced by Nearest Neighbour Approach
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "fig:meandering"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset Float figure
placement H
wide false
sideways false
status open


\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename Pics/meandering.png
	width 80text%

\end_inset

 
\begin_inset Caption

\begin_layout Standard

Improved Accuracy Using Downsampling
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "fig:downsampledpath"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Section

Algorithm Used for Trajectory Generation
\end_layout

\begin_layout Standard


\begin_inset Float figure
placement H
wide false
sideways false
status open


\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename Pics/trajtiles.png
	width 100text%

\end_inset

 
\begin_inset Caption

\begin_layout Standard

Trajectory Generated Showing Surface Path (Red), Offset Normals (Blue), End-Effector Path (Green), Downsampled Ribs, and Rib Location Points
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "fig:trajtiles"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

The final algorithm chosen for implementation uses a combination of the yaw plane intersections from figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:yawplane"

\end_inset

 for the wall sections and the pitch/roll plane intersections from figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:pitchroll"

\end_inset

 for the roof sections. To generate trajectories the algorithm uses the following structure:
\end_layout

\begin_layout Enumerate

Extract horizontal plane intersection and sort line 
\end_layout

\begin_layout Enumerate

Extract vertical plane intersection and sort line 
\end_layout

\begin_layout Enumerate

Use horizontal line to generate vertical ribs with sorted points 
\end_layout

\begin_layout Enumerate

Use vertical line to generate horizontal ribs with sorted points 
\end_layout

\begin_layout Enumerate

Select first point of each vertical rib, calculate surface normal, apply offset, and store trajectory point 
\end_layout

\begin_layout Enumerate

Select a point 
\begin_inset Quotes eld
\end_inset

step height
\begin_inset Quotes erd
\end_inset

 away from first point on each rib (in reverse order), calculate surface normal, apply offset, and store trajectory point 
\end_layout

\begin_layout Enumerate

Repeat step 6 until trajectory points have been generated for all vertical ribs, alternating direction 
\end_layout

\begin_layout Enumerate

Repeat steps 5-7 with horizontal ribs
\end_layout

\begin_layout Standard

Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:trajtiles"

\end_inset

 shows the final trajectory in the upper right. Steps 1-2 can be seen in the bottom right, 3-4 in the bottom left, and the surface path in the upper left. It should be noted the spray head will be instructed to shut off while it is moving from the final trajectory point of the wall section to the initial trajectory point of the roof section.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Subsection

Extracting Plane Intersections
\end_layout

\begin_layout Standard


\begin_inset Float figure
placement H
wide false
sideways false
status open


\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename Pics/genclosepts.png
	width 80text%

\end_inset

 
\begin_inset Caption

\begin_layout Standard

Sorted and Downsampled Vertical and Horizontal Plane Intersections
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "fig:sortedintersections"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

Steps 1-2 of the algorithm require extracting a vertical and horizontal plane intersection. The height of the horizontal plane can be set using the 
\begin_inset Quotes eld
\end_inset

mid_height
\begin_inset Quotes erd
\end_inset

 parameter. The vertical plane is centred on the robot. The thickness of the plane is set using the 
\begin_inset Quotes eld
\end_inset

slice_thickness" parameter. Once extracted the line of points is sorted and points that are 
\begin_inset Quotes eld
\end_inset

via_distance
\begin_inset Quotes erd
\end_inset

 apart are used as locations to calculate ribs. The horizontal and vertical plane intersection lines after their points have been downsampled to 
\begin_inset Quotes eld
\end_inset

via_distance
\begin_inset Quotes erd
\end_inset

 apart can be seen as two, four-point lines in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:sortedintersections"

\end_inset

. The final point of the sorted vertical line is not 
\begin_inset Quotes eld
\end_inset

via_distance
\begin_inset Quotes erd
\end_inset

 from the previous point, but is included to ensure the trajectory covers the entire selected area.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Subsection

Sorting Vertical and Horizontal Ribs
\end_layout

\begin_layout Standard


\begin_inset Float figure
placement H
wide false
sideways false
status open


\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename Pics/genclosejustribs.png
	width 80text%

\end_inset

 
\begin_inset Caption

\begin_layout Standard

Sorted and Downsampled Vertical and Horizontal Ribs
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "fig:ribs"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset Float figure
placement H
wide false
sideways false
status open


\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename Pics/gencloseribs.png
	width 80text%

\end_inset

 
\begin_inset Caption

\begin_layout Standard

--alt image--Sorted and Downsampled Vertical and Horizontal Ribs
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "fig:ribs2"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

At each point generated from the sorted vertical and horizontal plane intersections a vertical or horizontal rib is generated as shown in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:ribs"

\end_inset

. The ribs, receiving their name due to the similarity in appearance to a human rib cage, have their points sorted using the line point sorting algorithm. The spacing between points within a rib is determined by the 
\begin_inset Quotes eld
\end_inset

rib_downsampling
\begin_inset Quotes erd
\end_inset

 parameter. The maximum height of the wall section is defined using the 
\begin_inset Quotes eld
\end_inset

max_height
\begin_inset Quotes erd
\end_inset

 parameter. It does not need to be exact, but should approximate the height of the transition from a vertical wall section to a horizontal roof section. Trajectories for the curved sections between wall and roof sections can be generated with either vertical or horizontal ribs, so exact determination of 
\begin_inset Quotes eld
\end_inset

max_height
\begin_inset Quotes erd
\end_inset

 is not necessary. Additional parameters to prevent trajectory generation failure and improve accuracy are 
\begin_inset Quotes eld
\end_inset

max_rib_length
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

z_vert_limit
\begin_inset Quotes erd
\end_inset

, and 
\begin_inset Quotes eld
\end_inset

rib_tolerance
\begin_inset Quotes erd
\end_inset

. The parameter 
\begin_inset Quotes eld
\end_inset

max_rib_length
\begin_inset Quotes erd
\end_inset

 can be used to ensure the rib shown in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:sline"

\end_inset

 cannot be generated by limiting the maximum amount of length the rib can be. However, to ensure ribs are not unintentially shortened knowledge of the mine size and shape is required. The achieve a more accurate sorting of the wall sections, 
\begin_inset Quotes eld
\end_inset

z_vert_limit
\begin_inset Quotes erd
\end_inset

 is used to define the vertical limit where exclusively Z-values are used to determine point-to-point distance along the rib. When sorting the rib points, it is possible the scanner may pick up erroneous data points from particulate in the air or unexpected objects in the work environment. These data points are usually significantly further away from the line of rib points, so any points further than 
\begin_inset Quotes eld
\end_inset

rib_tolerance
\begin_inset Quotes erd
\end_inset

 from the previous point is considered erroneous.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Subsection

Selecting Trajectory Points
\end_layout

\begin_layout Standard


\begin_inset Float figure
placement H
wide false
sideways false
status open


\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename Pics/genclosepath.png
	width 80text%

\end_inset

 
\begin_inset Caption

\begin_layout Standard

Path Generated Through Selecting Trajectory Points
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "fig:path"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

Once the ribs have been generated and sorted the trajectory points are selected to form the path shown in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:path"

\end_inset

. Beginning with the vertical ribs, the first point of the first rib is selected. The surface normal is calculated at that point and the trajectory point is offset from the surface along the surface normal by the 
\begin_inset Quotes eld
\end_inset

offset
\begin_inset Quotes erd
\end_inset

 amount defined in the configuration file (or changed using the 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
node
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset

rqt_reconfigure
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 GUI). Going through each rib in order the first point of the rib is offset and added to the list of trajectory points. After the first point of each rib has been converted to a trajectory point, the same process is repeated using the ribs in reverse order. Rather than picking the first point on the rib, a point 
\begin_inset Quotes eld
\end_inset

step_height
\begin_inset Quotes erd
\end_inset

 away from the previous point is used to calculate the trajectory point. This process is repeated while alternating the order of ribs from which the points are selected until the trajectory reaches the top of the wall section that was defined by 
\begin_inset Quotes eld
\end_inset

max_height
\begin_inset Quotes erd
\end_inset

. The process repeats itself on the ribs generated on the roof section to complete the trajectory generation.
\begin_inset Newline newline
\end_inset


\end_layout

\end_body
\end_document
